/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgAdmin.java
 *
 * Created on 21 Jun 10, 20:53:44
 */

package simrskhanza;

import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.WarnaTable;
import fungsi.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public class DlgRunTeks extends javax.swing.JDialog {
    private DefaultTableModel tabMode, tabMode1, tabMode2;
    private Connection koneksi = koneksiDB.condb();
    private sekuel Sequel = new sekuel();
    private validasi Valid = new validasi();
    private PreparedStatement ps2;
    private ResultSet rs2;
    private int i = 0;
    private String pinNya = "", kdInformasi = "", tglnya = "";

    /** Creates new form DlgAdmin */
    public DlgRunTeks(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(10,10);
        
        Object[] row = {"Kode", "URL Youtube Video", "Kalimat Informasi"};
        tabMode=new DefaultTableModel(null,row){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };

        tbDisplay.setModel(tabMode);
        tbDisplay.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 3; i++) {
            TableColumn column = tbDisplay.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(50);
            } else if (i == 1) {
                column.setPreferredWidth(300);
            } else if (i == 2) {
                column.setPreferredWidth(400);
            }
        }

        tbDisplay.setDefaultRenderer(Object.class, new WarnaTable());
        
        tabMode1 = new DefaultTableModel(null, new Object[]{
            "PIN Petugas", "PIN Admin Utama"}) {
            @Override public boolean isCellEditable(int rowIndex, int colIndex) {return false;}            
        };
        tbNomor.setModel(tabMode1);
        tbNomor.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tbNomor.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 2; i++) {
            TableColumn column = tbNomor.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(100);
            } else if (i == 1) {
                column.setPreferredWidth(130);
            }
        }
        tbNomor.setDefaultRenderer(Object.class, new WarnaTable());
        
        tabMode2 = new DefaultTableModel(null, new Object[]{
            "Tgl. Libur", "Keterangan Libur"}) {
            @Override public boolean isCellEditable(int rowIndex, int colIndex) {return false;}            
        };
        tbHari.setModel(tabMode2);
        tbHari.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tbHari.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 2; i++) {
            TableColumn column = tbHari.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(75);
            } else if (i == 1) {
                column.setPreferredWidth(450);
            }
        }
        tbHari.setDefaultRenderer(Object.class, new WarnaTable());
        
        pinPetugas.setDocument(new batasInput((int) 4).getOnlyAngka(pinPetugas));
        pinAdmin.setDocument(new batasInput((int) 4).getOnlyAngka(pinAdmin));
        taun.setDocument(new batasInput((int) 4).getOnlyAngka(taun));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnHakAkses = new javax.swing.JMenuItem();
        MnHariLibur = new javax.swing.JMenuItem();
        internalFrame1 = new widget.InternalFrame();
        panelGlass1 = new widget.panelGlass();
        Scroll2 = new widget.ScrollPane();
        TTeks = new widget.TextArea();
        pinPetugas = new widget.TextBox();
        label14 = new widget.Label();
        pinAdmin = new widget.TextBox();
        ChkPetugas = new widget.CekBox();
        ChkTeks = new widget.CekBox();
        label38 = new widget.Label();
        urlVideo = new widget.TextBox();
        ChkHariLibur = new widget.CekBox();
        tglLibur = new widget.Tanggal();
        label15 = new widget.Label();
        ketLibur = new widget.TextBox();
        internalFrame2 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbDisplay = new widget.Table();
        Scroll1 = new widget.ScrollPane();
        tbNomor = new widget.Table();
        internalFrame3 = new widget.InternalFrame();
        Scroll3 = new widget.ScrollPane();
        tbHari = new widget.Table();
        panelisi2 = new widget.panelisi();
        jLabel15 = new widget.Label();
        taun = new widget.TextBox();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        panelisi1 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnBatal = new widget.Button();
        BtnEdit = new widget.Button();
        BtnKeluar = new widget.Button();
        jLabel7 = new widget.Label();
        LCount = new widget.Label();

        jPopupMenu1.setForeground(new java.awt.Color(60, 80, 50));
        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        MnHakAkses.setBackground(new java.awt.Color(255, 255, 255));
        MnHakAkses.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnHakAkses.setForeground(new java.awt.Color(0, 0, 0));
        MnHakAkses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnHakAkses.setText("Hapus Hak Akses Nomor Antrian");
        MnHakAkses.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnHakAkses.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnHakAkses.setIconTextGap(5);
        MnHakAkses.setName("MnHakAkses"); // NOI18N
        MnHakAkses.setPreferredSize(new java.awt.Dimension(220, 26));
        MnHakAkses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnHakAksesActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnHakAkses);

        MnHariLibur.setBackground(new java.awt.Color(255, 255, 255));
        MnHariLibur.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnHariLibur.setForeground(new java.awt.Color(0, 0, 0));
        MnHariLibur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnHariLibur.setText("Hapus Hari Libur");
        MnHariLibur.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnHariLibur.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnHariLibur.setIconTextGap(5);
        MnHariLibur.setName("MnHariLibur"); // NOI18N
        MnHariLibur.setPreferredSize(new java.awt.Dimension(220, 26));
        MnHariLibur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnHariLiburActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnHariLibur);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(215, 225, 215)), "::[ Set Antrian ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass1.setName("panelGlass1"); // NOI18N
        panelGlass1.setPreferredSize(new java.awt.Dimension(200, 230));
        panelGlass1.setLayout(null);

        Scroll2.setForeground(new java.awt.Color(153, 0, 51));
        Scroll2.setName("Scroll2"); // NOI18N
        Scroll2.setOpaque(true);
        Scroll2.setPreferredSize(new java.awt.Dimension(202, 150));

        TTeks.setBorder(null);
        TTeks.setColumns(20);
        TTeks.setRows(5);
        TTeks.setName("TTeks"); // NOI18N
        TTeks.setPreferredSize(new java.awt.Dimension(200, 280));
        TTeks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TTeksKeyPressed(evt);
            }
        });
        Scroll2.setViewportView(TTeks);

        panelGlass1.add(Scroll2);
        Scroll2.setBounds(110, 10, 610, 114);

        pinPetugas.setForeground(new java.awt.Color(0, 0, 0));
        pinPetugas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pinPetugas.setName("pinPetugas"); // NOI18N
        pinPetugas.setPreferredSize(new java.awt.Dimension(207, 23));
        panelGlass1.add(pinPetugas);
        pinPetugas.setBounds(170, 160, 70, 23);

        label14.setForeground(new java.awt.Color(0, 0, 0));
        label14.setText("PIN Nomor Antrian Admin Utama : ");
        label14.setName("label14"); // NOI18N
        label14.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass1.add(label14);
        label14.setBounds(241, 160, 180, 23);

        pinAdmin.setForeground(new java.awt.Color(0, 0, 0));
        pinAdmin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pinAdmin.setName("pinAdmin"); // NOI18N
        pinAdmin.setPreferredSize(new java.awt.Dimension(207, 23));
        panelGlass1.add(pinAdmin);
        pinAdmin.setBounds(423, 160, 70, 23);

        ChkPetugas.setBackground(new java.awt.Color(255, 255, 250));
        ChkPetugas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 250)));
        ChkPetugas.setForeground(new java.awt.Color(0, 0, 0));
        ChkPetugas.setText("PIN Nomor Antrian Petugas : ");
        ChkPetugas.setBorderPainted(true);
        ChkPetugas.setBorderPaintedFlat(true);
        ChkPetugas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ChkPetugas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkPetugas.setName("ChkPetugas"); // NOI18N
        ChkPetugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkPetugasActionPerformed(evt);
            }
        });
        panelGlass1.add(ChkPetugas);
        ChkPetugas.setBounds(0, 160, 170, 23);

        ChkTeks.setBackground(new java.awt.Color(255, 255, 250));
        ChkTeks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 250)));
        ChkTeks.setForeground(new java.awt.Color(0, 0, 0));
        ChkTeks.setText("Teks Berjalan : ");
        ChkTeks.setBorderPainted(true);
        ChkTeks.setBorderPaintedFlat(true);
        ChkTeks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ChkTeks.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkTeks.setName("ChkTeks"); // NOI18N
        ChkTeks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkTeksActionPerformed(evt);
            }
        });
        panelGlass1.add(ChkTeks);
        ChkTeks.setBounds(0, 10, 110, 23);

        label38.setForeground(new java.awt.Color(0, 0, 0));
        label38.setText("URL Youtube Video : ");
        label38.setName("label38"); // NOI18N
        label38.setPreferredSize(new java.awt.Dimension(35, 23));
        panelGlass1.add(label38);
        label38.setBounds(0, 130, 110, 23);

        urlVideo.setForeground(new java.awt.Color(0, 0, 0));
        urlVideo.setName("urlVideo"); // NOI18N
        urlVideo.setPreferredSize(new java.awt.Dimension(207, 23));
        panelGlass1.add(urlVideo);
        urlVideo.setBounds(110, 130, 610, 23);

        ChkHariLibur.setBackground(new java.awt.Color(255, 255, 250));
        ChkHariLibur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 250)));
        ChkHariLibur.setForeground(new java.awt.Color(0, 0, 0));
        ChkHariLibur.setText("Set Hari Libur, Tgl. : ");
        ChkHariLibur.setBorderPainted(true);
        ChkHariLibur.setBorderPaintedFlat(true);
        ChkHariLibur.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ChkHariLibur.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkHariLibur.setName("ChkHariLibur"); // NOI18N
        panelGlass1.add(ChkHariLibur);
        ChkHariLibur.setBounds(0, 190, 128, 23);

        tglLibur.setEditable(false);
        tglLibur.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25-06-2022" }));
        tglLibur.setDisplayFormat("dd-MM-yyyy");
        tglLibur.setName("tglLibur"); // NOI18N
        tglLibur.setOpaque(false);
        panelGlass1.add(tglLibur);
        tglLibur.setBounds(130, 190, 90, 23);

        label15.setForeground(new java.awt.Color(0, 0, 0));
        label15.setText("Keterangan Libur : ");
        label15.setName("label15"); // NOI18N
        label15.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass1.add(label15);
        label15.setBounds(221, 190, 107, 23);

        ketLibur.setForeground(new java.awt.Color(0, 0, 0));
        ketLibur.setName("ketLibur"); // NOI18N
        ketLibur.setPreferredSize(new java.awt.Dimension(207, 23));
        panelGlass1.add(ketLibur);
        ketLibur.setBounds(330, 190, 390, 23);

        internalFrame1.add(panelGlass1, java.awt.BorderLayout.PAGE_START);

        internalFrame2.setName("internalFrame2"); // NOI18N
        internalFrame2.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "::[ Display Monitor ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);
        Scroll.setPreferredSize(new java.awt.Dimension(452, 100));

        tbDisplay.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbDisplay.setName("tbDisplay"); // NOI18N
        tbDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDisplayMouseClicked(evt);
            }
        });
        tbDisplay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbDisplayKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbDisplay);

        internalFrame2.add(Scroll, java.awt.BorderLayout.PAGE_START);

        Scroll1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "::[ Hak Akses Nomor Antrian ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        Scroll1.setName("Scroll1"); // NOI18N
        Scroll1.setOpaque(true);
        Scroll1.setPreferredSize(new java.awt.Dimension(460, 100));

        tbNomor.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbNomor.setComponentPopupMenu(jPopupMenu1);
        tbNomor.setName("tbNomor"); // NOI18N
        tbNomor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNomorMouseClicked(evt);
            }
        });
        tbNomor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbNomorKeyPressed(evt);
            }
        });
        Scroll1.setViewportView(tbNomor);

        internalFrame2.add(Scroll1, java.awt.BorderLayout.CENTER);

        internalFrame3.setName("internalFrame3"); // NOI18N
        internalFrame3.setPreferredSize(new java.awt.Dimension(460, 420));
        internalFrame3.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "::[ Set Hari Libur / Tutup Pelayanan Normal Poliklinik Rawat Jalan ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        Scroll3.setName("Scroll3"); // NOI18N
        Scroll3.setOpaque(true);
        Scroll3.setPreferredSize(new java.awt.Dimension(460, 250));

        tbHari.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbHari.setComponentPopupMenu(jPopupMenu1);
        tbHari.setName("tbHari"); // NOI18N
        tbHari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHariMouseClicked(evt);
            }
        });
        tbHari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbHariKeyPressed(evt);
            }
        });
        Scroll3.setViewportView(tbHari);

        internalFrame3.add(Scroll3, java.awt.BorderLayout.CENTER);

        panelisi2.setName("panelisi2"); // NOI18N
        panelisi2.setPreferredSize(new java.awt.Dimension(100, 54));
        panelisi2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Tahun Libur : ");
        jLabel15.setName("jLabel15"); // NOI18N
        jLabel15.setPreferredSize(new java.awt.Dimension(80, 23));
        panelisi2.add(jLabel15);

        taun.setForeground(new java.awt.Color(0, 0, 0));
        taun.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        taun.setName("taun"); // NOI18N
        taun.setPreferredSize(new java.awt.Dimension(60, 23));
        taun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taunKeyPressed(evt);
            }
        });
        panelisi2.add(taun);

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi2.add(jLabel6);

        TCari.setForeground(new java.awt.Color(0, 0, 0));
        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(250, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelisi2.add(TCari);

        BtnCari.setForeground(new java.awt.Color(0, 0, 0));
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('T');
        BtnCari.setText("Tampilkan Data");
        BtnCari.setToolTipText("Alt+T");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(150, 30));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelisi2.add(BtnCari);

        BtnAll.setForeground(new java.awt.Color(0, 0, 0));
        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('B');
        BtnAll.setText("Semua Data");
        BtnAll.setToolTipText("Alt+B");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(120, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi2.add(BtnAll);

        internalFrame3.add(panelisi2, java.awt.BorderLayout.PAGE_END);

        internalFrame2.add(internalFrame3, java.awt.BorderLayout.PAGE_END);

        internalFrame1.add(internalFrame2, java.awt.BorderLayout.CENTER);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 54));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setForeground(new java.awt.Color(0, 0, 0));
        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelisi1.add(BtnSimpan);

        BtnBatal.setForeground(new java.awt.Color(0, 0, 0));
        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setName("BtnBatal"); // NOI18N
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelisi1.add(BtnBatal);

        BtnEdit.setForeground(new java.awt.Color(0, 0, 0));
        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setName("BtnEdit"); // NOI18N
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        BtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEditKeyPressed(evt);
            }
        });
        panelisi1.add(BtnEdit);

        BtnKeluar.setForeground(new java.awt.Color(0, 0, 0));
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Ada : ");
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(45, 23));
        panelisi1.add(jLabel7);

        LCount.setForeground(new java.awt.Color(0, 0, 0));
        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(230, 23));
        panelisi1.add(LCount);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if (ChkTeks.isSelected() == true) {
            if (TTeks.getText().equals("")) {
                Valid.textKosong(TTeks, "Teks");
            } else if (urlVideo.getText().trim().equals("")) {
                Valid.textKosong(urlVideo, "URL Youtube Video");
                urlVideo.requestFocus();
            } else if (kdInformasi.equals("")) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu datanya pada tabel yg. akan diperbaiki...!!!!");
                tbDisplay.requestFocus();
            } else {
                Sequel.mengedit("antrian_informasi", "kode='" + kdInformasi + "'",
                        "url_video='" + urlVideo.getText() + "',kalimat='" + TTeks.getText() + "'");
                tampil();
                emptTeks();
            }
        }

        if (ChkPetugas.isSelected() == true) {
            if (pinPetugas.getText().equals("")) {
                Valid.textKosong(pinPetugas, "PIN Nomor Antrian Petugas");
                pinPetugas.requestFocus();
            } else if (pinAdmin.getText().equals("")) {
                Valid.textKosong(pinAdmin, "PIN Nomor Antrian Admin Utama");
                pinAdmin.requestFocus();
            } else if (pinNya.equals("")) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu datanya pada tabel yg. akan diperbaiki...!!!!");
            } else {
                Sequel.mengedit("antrian_hak_akses", "pin_petugas='" + pinNya + "'",
                        "pin_petugas='" + pinPetugas.getText() + "',pin_admin_utama='" + pinAdmin.getText() + "'");
                tampilNomor();
                emptTeks();
            }
        }
        
        if (ChkHariLibur.isSelected() == true) {
            if (ketLibur.getText().trim().equals("")) {
                Valid.textKosong(ketLibur, "Keterangan Libur");
                ketLibur.requestFocus();
            } else if (tglnya.equals("")) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu datanya pada tabel yg. akan diperbaiki...!!!!");
                tbHari.requestFocus();
            } else {
                Sequel.mengedit("hari_libur", "tgl_libur='" + tglnya + "'",
                        "tgl_libur='" + Valid.SetTgl(tglLibur.getSelectedItem() + "") + "',"
                        + "keterangan='" + ketLibur.getText() + "'");
                tampilLibur();
                emptTeks();
            }                      
        }
}//GEN-LAST:event_BtnEditActionPerformed

    private void tbDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDisplayMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
                getData();
            } catch (java.lang.NullPointerException e) {
            }
        }
}//GEN-LAST:event_tbDisplayMouseClicked

    private void tbDisplayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDisplayKeyPressed
        if(tabMode.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getData();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
}//GEN-LAST:event_tbDisplayKeyPressed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if (ChkTeks.isSelected() == false && ChkPetugas.isSelected() == false && ChkHariLibur.isSelected() == false) {
            JOptionPane.showMessageDialog(null, "Silahkan conteng dulu Teks berjalan, PIN Nomor Antrian Petugas atau Set Hari Libur utk. menyimpan data...");
        } else {
            if (ChkTeks.isSelected() == true) {
                if (TTeks.getText().equals("")) {
                    Valid.textKosong(TTeks, "Teks");
                } else if (urlVideo.getText().trim().equals("")) {
                    Valid.textKosong(urlVideo, "URL Youtube Video");
                    urlVideo.requestFocus();
                } else if (tabMode.getRowCount() == 0) {
                    Sequel.mengedit("antrian_informasi", "kode='" + kdInformasi + "'",
                        "url_video='" + urlVideo.getText() + "',kalimat='" + TTeks.getText() + "'");
                    tampil();
                    emptTeks();
                } else if (tabMode.getRowCount() > 0) {
                    JOptionPane.showMessageDialog(null, "Maaf, Hanya diijinkan satu display antrian...!!!!");
                }
            }

            if (ChkPetugas.isSelected() == true) {
                if (pinPetugas.getText().equals("")) {
                    Valid.textKosong(pinPetugas, "PIN Nomor Antrian Petugas");
                    pinPetugas.requestFocus();
                } else if (pinAdmin.getText().equals("")) {
                    Valid.textKosong(pinAdmin, "PIN Nomor Antrian Admin Utama");
                    pinAdmin.requestFocus();
                } else if (tabMode1.getRowCount() == 0) {
                    Sequel.menyimpan("antrian_hak_akses", "'" + pinPetugas.getText() + "','" + pinAdmin.getText() + "'", "Hak Akses Nomor Antrian");
                    tampilNomor();
                    emptTeks();
                } else if (tabMode1.getRowCount() > 0) {
                    JOptionPane.showMessageDialog(null, "Maaf, Hanya diijinkan satu data hak akses nomor antrian aja...!!!!");
                }
            }
            
            if (ChkHariLibur.isSelected() == true) {
                if (ketLibur.getText().trim().equals("")) {
                    Valid.textKosong(ketLibur, "Keterangan Libur");
                    ketLibur.requestFocus();
                } else {
                    Sequel.menyimpan("hari_libur", "'" + Valid.SetTgl(tglLibur.getSelectedItem() + "") + "',"
                            + "'" + ketLibur.getText() + "'", "Set Hari Libur");
                    tampilLibur();
                    emptTeks();
                }
            }
        }
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnSimpanActionPerformed(null);
        } else {
            Valid.pindah(evt, TTeks, BtnBatal);
        }
    }//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        emptTeks();
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            emptTeks();
        }
    }//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEditKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnEditActionPerformed(null);
        }
    }//GEN-LAST:event_BtnEditKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
          dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            dispose();
        }else{Valid.pindah(evt,BtnEdit,BtnKeluar);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

private void TTeksKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TTeksKeyPressed
        Valid.pindah(evt, BtnKeluar, urlVideo);
}//GEN-LAST:event_TTeksKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        taun.setText(Sequel.cariIsi("SELECT YEAR(NOW())"));
        tampil();
        tampilNomor();
        tampilLibur();
    }//GEN-LAST:event_formWindowOpened

    private void tbNomorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNomorMouseClicked
        if (tabMode1.getRowCount() != 0) {
            try {
                getDataNomor();
            } catch (java.lang.NullPointerException e) {
            }
        }
    }//GEN-LAST:event_tbNomorMouseClicked

    private void tbNomorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbNomorKeyPressed
        if (tabMode1.getRowCount() != 0) {
            if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
                try {
                    getDataNomor();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
    }//GEN-LAST:event_tbNomorKeyPressed

    private void MnHakAksesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnHakAksesActionPerformed
        if (tabMode1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, tabel masih kosong...!!!!");
            tbNomor.requestFocus();
        } else if (pinNya.equals("")) {
            JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu datanya pada tabel yg. akan diperbaiki...!!!!");
            tbNomor.requestFocus();
        } else {
            Sequel.queryu("delete from antrian_hak_akses");
            tampilNomor();
            emptTeks();
        }
    }//GEN-LAST:event_MnHakAksesActionPerformed

    private void ChkPetugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkPetugasActionPerformed
        pinPetugas.requestFocus();
    }//GEN-LAST:event_ChkPetugasActionPerformed

    private void ChkTeksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkTeksActionPerformed
        TTeks.requestFocus();
    }//GEN-LAST:event_ChkTeksActionPerformed

    private void tbHariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHariMouseClicked
        if (tabMode2.getRowCount() != 0) {
            try {
                getDataLibur();
            } catch (java.lang.NullPointerException e) {
            }
        }
    }//GEN-LAST:event_tbHariMouseClicked

    private void tbHariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbHariKeyPressed
        if (tabMode2.getRowCount() != 0) {
            if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
                try {
                    getDataLibur();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
    }//GEN-LAST:event_tbHariKeyPressed

    private void MnHariLiburActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnHariLiburActionPerformed
        if (tabMode2.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, tabel masih kosong...!!!!");
            tbHari.requestFocus();
        } else if (tglnya.equals("")) {
            JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu datanya pada tabel yg. akan diperbaiki...!!!!");
            tbHari.requestFocus();
        } else {
            Sequel.queryu("delete from hari_libur where tgl_libur='" + tglnya + "'");
            tampilLibur();
            emptTeks();
        }
    }//GEN-LAST:event_MnHariLiburActionPerformed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        if (taun.getText().equals("") || taun.getText().length() < 4) {
            JOptionPane.showMessageDialog(null, "Silahkan isi tahun libur dengan benar...!!!!");
            taun.requestFocus();
        } else {
            tampilLibur();
        }
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        if (taun.getText().equals("") || taun.getText().length() < 4) {
            JOptionPane.showMessageDialog(null, "Silahkan isi tahun libur dengan benar...!!!!");
            taun.requestFocus();
        } else {
            TCari.setText("");
            tampilLibur();
        }
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {            
            TCari.setText("");
            tampilLibur();
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void taunKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taunKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_taunKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgRunTeks dialog = new DlgRunTeks(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    private widget.Button BtnCari;
    private widget.Button BtnEdit;
    private widget.Button BtnKeluar;
    private widget.Button BtnSimpan;
    private widget.CekBox ChkHariLibur;
    private widget.CekBox ChkPetugas;
    private widget.CekBox ChkTeks;
    private widget.Label LCount;
    private javax.swing.JMenuItem MnHakAkses;
    private javax.swing.JMenuItem MnHariLibur;
    private widget.ScrollPane Scroll;
    private widget.ScrollPane Scroll1;
    private widget.ScrollPane Scroll2;
    private widget.ScrollPane Scroll3;
    private widget.TextBox TCari;
    private widget.TextArea TTeks;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame2;
    private widget.InternalFrame internalFrame3;
    private widget.Label jLabel15;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.TextBox ketLibur;
    private widget.Label label14;
    private widget.Label label15;
    private widget.Label label38;
    private widget.panelGlass panelGlass1;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi2;
    private widget.TextBox pinAdmin;
    private widget.TextBox pinPetugas;
    private widget.TextBox taun;
    private widget.Table tbDisplay;
    private widget.Table tbHari;
    private widget.Table tbNomor;
    private widget.Tanggal tglLibur;
    private widget.TextBox urlVideo;
    // End of variables declaration//GEN-END:variables

    private void tampil() {
        String sql = "select kode, url_video, kalimat from antrian_informasi order by kode";
        prosesCari(sql);
    }
    
    private void tampilNomor() {
        String sql1 = "select pin_petugas, pin_admin_utama from antrian_hak_akses";
        prosesCari1(sql1);
    }
    
    private void prosesCari(String sql) {
        kdInformasi = "";
        Valid.tabelKosong(tabMode);
        try {
            java.sql.Statement stat = koneksi.createStatement();            
            ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {
                Object[] data = {rs.getString(1), rs.getString(2), rs.getString(3)};
                tabMode.addRow(data);
            }
        } catch (SQLException e) {
            System.out.println("Notifikasi : " + e);
        }
    }
    
    private void prosesCari1(String sql1) {
        pinNya = "";
        Valid.tabelKosong(tabMode1);
        try {
            java.sql.Statement stat = koneksi.createStatement();
            ResultSet rs1 = stat.executeQuery(sql1);
            while (rs1.next()) {
                Object[] data1 = {rs1.getString(1), rs1.getString(2)};
                tabMode1.addRow(data1);
            }
        } catch (SQLException e) {
            System.out.println("Notifikasi : " + e);
        }
    }
    
    private void tampilLibur() {
        tglnya = "";
        Valid.tabelKosong(tabMode2);
        try {
            ps2 = koneksi.prepareStatement("select tgl_libur, keterangan from hari_libur where "
                    + "year(tgl_libur)='" + taun.getText() + "' and keterangan like ? order by tgl_libur desc");
            try {
                ps2.setString(1, "%" + TCari.getText().trim() + "%");
                rs2 = ps2.executeQuery();
                while (rs2.next()) {
                    tabMode2.addRow(new Object[]{
                        rs2.getString("tgl_libur"),
                        rs2.getString("keterangan")
                    });
                }
            } catch (Exception e) {
                System.out.println("Notifikasi : " + e);
            } finally {
                if (rs2 != null) {
                    rs2.close();
                }
                if (ps2 != null) {
                    ps2.close();
                }
            }
        } catch (SQLException e) {
            System.out.println("Notifikasi : " + e);
        }
        LCount.setText("" + tabMode2.getRowCount() + " hari libur ditemukan.");
    }

    private void getData() {
        kdInformasi = "";
        if (tbDisplay.getSelectedRow() != -1) {
            kdInformasi = tbDisplay.getValueAt(tbDisplay.getSelectedRow(), 0).toString();
            urlVideo.setText(tbDisplay.getValueAt(tbDisplay.getSelectedRow(), 1).toString());
            TTeks.setText(tbDisplay.getValueAt(tbDisplay.getSelectedRow(), 2).toString());

            if (!kdInformasi.equals("")) {
                ChkTeks.setSelected(true);
            } else {
                ChkTeks.setSelected(false);
            }
        }
    }
    
    private void getDataNomor() {
        pinNya = "";
        if (tbNomor.getSelectedRow() != -1) {
            pinPetugas.setText(tbNomor.getValueAt(tbNomor.getSelectedRow(), 0).toString());
            pinAdmin.setText(tbNomor.getValueAt(tbNomor.getSelectedRow(), 1).toString());
            pinNya = pinPetugas.getText();
            
            if (!pinNya.equals("")) {
                ChkPetugas.setSelected(true);
            } else {
                ChkPetugas.setSelected(false);
            }
        }
    }
    
    private void getDataLibur() {
        tglnya = "";
        if (tbHari.getSelectedRow() != -1) {
            tglnya = tbHari.getValueAt(tbHari.getSelectedRow(), 0).toString();
            Valid.SetTgl(tglLibur, tbHari.getValueAt(tbHari.getSelectedRow(), 0).toString());
            ketLibur.setText(tbHari.getValueAt(tbHari.getSelectedRow(), 1).toString());
            
            if (!tglnya.equals("")) {
                ChkHariLibur.setSelected(true);
            } else {
                ChkHariLibur.setSelected(false);
            }
        }
    }

    public void emptTeks() {
        TTeks.setText("");
        ChkTeks.setSelected(false);
        ChkPetugas.setSelected(false);
        ChkHariLibur.setSelected(false);
        pinPetugas.setText("");
        pinAdmin.setText("");
        urlVideo.setText("");
        tglLibur.setDate(new Date());
        ketLibur.setText("");
        TTeks.requestFocus();
        taun.setText(Sequel.cariIsi("SELECT YEAR(NOW())"));
        tampil();
        tampilNomor();
        tampilLibur();
    }
}
